---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: verify nginx service
      command: service nginx status
      changed_when: false

    - name: verify that nginx is listening on port 80
      wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: verify apache2 service
      command: service apache2 status
      changed_when: false
    
    - name: verify that apache2 is listening on port 80
      wait_for: port=80 timeout=1

- hosts: db
  become: true
  tasks:
    - name: verify mysql service
      command: service mysql status
      changed_when: false

    - name: verify that mysql is listening on port 3306
      wait_for: host={{ ansible_wlan0.ipv4.address }} port=3306 timeout=1

- hosts: control
  gather_facts: false
  tasks: 
    - name: verify end-to-end response
      uri: url=http://{{ item }} return_content=yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_index

    - fail: msg="index failed to return content"
      when: "'Response from' not in item.content"
      with_items: "{{ lb_index.results }}"

    - name: verify database response
      uri: url=http://{{ item }}/db return_content=yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_db

    - fail: msg="database failed to return content"
      when: "'Database connect' not in item.content"
      with_items: "{{ lb_db.results }}"

- hosts: loadbalancer
  gather_facts: false
  tasks: 
    - name: verify backend response
      uri: url=http://{{ item }} return_content=yes
      with_items: "{{ groups['webserver'] }}"
      register: app_index

    - fail: msg="index failed to return content"
      when: "'Response from {{ item.item }}' not in item.content"
      with_items: "{{ app_index.results }}"

    - name: verify backend database response
      uri: url=http://{{ item }}/db return_content=yes
      with_items: "{{ groups['webserver'] }}"
      register: app_db

    - fail: msg="database failed to return content"
      when: "'Database connect {{ item.item }}' not in item.content"
      with_items: "{{ app_db.results }}"
